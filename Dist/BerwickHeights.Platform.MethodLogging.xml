<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BerwickHeights.Platform.MethodLogging</name>
    </assembly>
    <members>
        <member name="T:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase">
            <summary>
            Abstract base class for an AOP interceptor that logs method calls and exceptions that occur during
            the method call.
            </summary>
        </member>
        <member name="F:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase.TraceMethodsConfigKey">
            <summary>
            Configuration key that turns method tracing on or off
            </summary>
        </member>
        <member name="F:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase.ConfigPropertyName">
            <summary>
            Interceptor config property name
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase.#ctor(BerwickHeights.Platform.PerfTest.Svc.IPerfTestSvc,BerwickHeights.Platform.Core.CurrentUser.ICurrentUserSvc,BerwickHeights.Platform.Core.Config.IConfigurationSvc,BerwickHeights.Platform.Core.Logging.ILogger)">
            <summary>
            Constructor used when running performance tests
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase.#ctor(BerwickHeights.Platform.Core.CurrentUser.ICurrentUserSvc,BerwickHeights.Platform.Core.Config.IConfigurationSvc,BerwickHeights.Platform.Core.Logging.ILogger)">
            <summary>
            Production constructor (no PerfTest component)
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase.InterceptMethodCall(System.Object,System.String,System.String,System.Collections.Generic.IList{System.Reflection.ParameterInfo},System.Collections.Generic.IList{System.Object},System.Type)">
            <summary>
            Implementing type can use this to log the method call (if configured via 
            MethodLoggingInterceptBase.TraceMethodsConfigKey configuration key) and log any exceptions that are caught.
            The method calls the abstract method ProceedWithMethodCall() when it is time to call the intercepted 
            method. The data object passed into this method is returned in the call to ProceedWithMethodCall().
            </summary>
            <param name="data">Implementation-specific data (e.g., invocation data) that is returned in the call
            to ProceedWithMethodCall().</param>
            <param name="typeName">The type of the target class.</param>
            <param name="methodName">The name of the method being intercepted.</param>
            <param name="methodParameters">The parameters of the method being intercepted.</param>
            <param name="arguments">The argument values of the method being intercepted.</param>
            <param name="returnType">The return type of the method being intercepted.</param>
        </member>
        <member name="M:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase.ProceedWithMethodCall(System.Object)">
            <summary>
            Inheriting type implements this by calling the intercepted method call. The data parameter is the value 
            that was originally passed to InterceptMethodCall(). Returns the value that is returned from the
            intercepted method call.
            </summary>
            <param name="data">The value that was originally passed to InterceptMethodCall()</param>
            <returns>Returns the value that is returned from the intercepted method call.</returns>
        </member>
        <member name="P:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase.Config">
            <summary>
            Gets or sets interceptor's configuration data.
            </summary>
        </member>
        <member name="T:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase.ConfigData">
            <summary>
            Configuration structure used in the methods dump control.
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase.ConfigData.#ctor(System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates method dump config data initializing <code>DumpMethodParameters</code> 
            and <code>DumpMethodReturnValue</code>.
            </summary>
            <param name="dumpMethodParameters">Sets <code>DumpMethodParameters</code></param>
            <param name="dumpMethodReturnValue">Sets <code>DumpMethodReturnValue</code></param>
            <param name="parameterNameIgnoreList">Sets <code>ParameterNameIgnoreList</code></param>
        </member>
        <member name="P:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase.ConfigData.DumpMethodParameters">
            <summary>
            Gets or sets parameter that controls if method call parameters are
            to be dumped or not.
            </summary>
        </member>
        <member name="P:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase.ConfigData.DumpMethodReturnValue">
            <summary>
            Gets or sets parameter that controls if method call returned value is
            to be dumped or not.
            </summary>
        </member>
        <member name="P:BerwickHeights.Platform.MethodLogging.MethodLoggingInterceptorBase.ConfigData.ParameterNameIgnoreList">
            <summary>
            Gets or sets the parameter names that are to be ignored when dumping
            parameter values (e.g., don't dump password values).
            </summary>
        </member>
    </members>
</doc>
