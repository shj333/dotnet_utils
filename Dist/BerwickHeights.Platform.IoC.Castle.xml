<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BerwickHeights.Platform.IoC.Castle</name>
    </assembly>
    <members>
        <member name="T:BerwickHeights.Platform.IoC.Castle.MethodLoggingInterceptor">
            <summary>
            Castle Windsor interceptor that logs method calls and any exceptions that occur during method call.
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.MethodLoggingInterceptor.#ctor(BerwickHeights.Platform.PerfTest.Svc.IPerfTestSvc,BerwickHeights.Platform.Core.CurrentUser.ICurrentUserSvc,BerwickHeights.Platform.Core.Config.IConfigurationSvc,BerwickHeights.Platform.Core.Logging.ILoggerFactory)">
            <summary>
            Constructor used when running performance tests
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.MethodLoggingInterceptor.#ctor(BerwickHeights.Platform.Core.CurrentUser.ICurrentUserSvc,BerwickHeights.Platform.Core.Config.IConfigurationSvc,BerwickHeights.Platform.Core.Logging.ILoggerFactory)">
            <summary>
            Production constructor (no PerfTest component)
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.MethodLoggingInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.MethodLoggingInterceptor.ProceedWithMethodCall(System.Object)">
            <inheritDoc/>
        </member>
        <member name="T:BerwickHeights.Platform.IoC.Castle.CastleContainerManager">
            <summary>
            Manages the IoC container for Windsor Castle.
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.RegisterInterceptors(BerwickHeights.Platform.Core.IoC.InterceptorDescriptor[])">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.RegisterLoggerFactory(BerwickHeights.Platform.Core.Logging.ILoggerFactory)">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.RegisterComponentsFromAppConfig">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.RegisterComponentsFromExternalFile(System.String)">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.RegisterInProcComponents(System.String[])">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.RegisterWCFClientComponents(System.String,System.String[])">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.RegisterWCFServiceComponents(System.String,System.String[])">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.RegisterComponent(System.Type,System.Type)">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.RegisterComponentInstance(System.Type,System.Object,System.String)">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.SetupNHibernateIntegration(FluentNHibernate.Cfg.Db.IPersistenceConfigurer,FluentNHibernate.Automapping.AutoPersistenceModel,System.Action{NHibernate.Cfg.Configuration},System.Action{FluentNHibernate.Cfg.Db.CacheSettingsBuilder},System.Boolean)">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.SetupASPNetMVCIntegration">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.Resolve``1">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.TryResolve``1">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.Resolve``1(System.String)">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.ResolveAll``1">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleContainerManager.Dispose">
            <inheritDoc/>
        </member>
        <member name="T:BerwickHeights.Platform.IoC.Castle.CastleMVCControllerFactory">
            <summary>
            Factory that manages ASP.Net MVC controller instances using a Castle Windsor container.
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleMVCControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.CastleMVCControllerFactory.ReleaseController(System.Web.Mvc.IController)">
            <inheritDoc/>
        </member>
        <member name="T:BerwickHeights.Platform.IoC.Castle.InterceptorSelector">
            <summary>
            Adds configured Castle Windsor interceptors to components matching configured parameters.
            </summary>
        </member>
        <member name="F:BerwickHeights.Platform.IoC.Castle.InterceptorSelector.InterceptorNamePrefix">
            <summary>
            Prefix for the names of the interceptors.
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.InterceptorSelector.#ctor(System.Collections.Generic.IEnumerable{BerwickHeights.Platform.Core.IoC.InterceptorDescriptor})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.InterceptorSelector.HasInterceptors(Castle.Core.ComponentModel)">
            <inheritDoc/>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.InterceptorSelector.SelectInterceptors(Castle.Core.ComponentModel,Castle.Core.InterceptorReference[])">
            <inheritDoc/>
        </member>
        <member name="T:BerwickHeights.Platform.IoC.Castle.InterceptorsInstaller">
            <summary>
            Castle Windsor Installer that handles the insertion of interceptors into Castle components.
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.InterceptorsInstaller.#ctor(BerwickHeights.Platform.Core.IoC.InterceptorDescriptor[])">
            <summary>
            Sets up a Castle InterceptorSelector (implements IModelInterceptorsSelector interface) which adds the 
            given interceptors to classes that are in the given namespaces but not in the given ignore list.
            </summary>
        </member>
        <member name="M:BerwickHeights.Platform.IoC.Castle.InterceptorsInstaller.Install(Castle.Windsor.IWindsorContainer,Castle.MicroKernel.SubSystems.Configuration.IConfigurationStore)">
            <summary>
            Installs a Castle InterceptorSelector (implements IModelInterceptorsSelector interface) which adds the 
            given interceptors to classes that are in the given namespaces but not in the given ignore list.
            </summary>
            <param name="container">The Castle Windsor dependency injection container.</param>
            <param name="store">Configuration for this container.</param>
        </member>
    </members>
</doc>
