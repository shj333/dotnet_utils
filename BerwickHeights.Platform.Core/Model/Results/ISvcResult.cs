/*
 * Copyright 2012 Berwick Heights Software, Inc
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in 
 * compliance with the License. You may obtain a copy of the License at 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License is 
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and limitations under the License.
 *  
 */

using System;
using System.Collections.Generic;

namespace BerwickHeights.Platform.Core.Model.Results
{
    /// <summary>
    /// Interface to model type that holds results from a call to a service.
    /// </summary>
    public interface ISvcResult
    {
        /// <summary>
        /// Whether or not the service call succeeded.
        /// </summary>
        bool IsSuccess { get; }

        /// <summary>
        /// A list of messages generated by the service call. Each message holds a resource identifier and message
        /// arguments that can be used to render the message on a user interface.
        /// </summary>
        IEnumerable<SvcResultMessage> Messages { get; }

        /// <summary>
        /// A list of exceptions generated during the service call.
        /// </summary>
        IEnumerable<Exception> Exceptions { get; }

        /// <summary>
        /// A list of exception messages generated during the service call.
        /// </summary>
        IEnumerable<string> ExceptionMessages { get; }

        /// <summary>
        /// Whether or not the service call generated any exceptions.
        /// </summary>
        bool HasExceptions { get; }
    }

    /// <summary>
    /// Interface to model type that holds results from a call to a service that returns an entity.
    /// </summary>
    public interface ISvcResult<out T> : ISvcResult
    {
        /// <summary>
        /// The returned entity.
        /// </summary>
        T Entity { get; }
    }
}
